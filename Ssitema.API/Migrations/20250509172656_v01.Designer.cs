// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ssitema.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250509172656_v01")]
    partial class v01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Sistema.Modelos.Certificado", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InscripcionCodigo")
                        .HasColumnType("int");

                    b.Property<bool>("esValido")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Codigo");

                    b.HasIndex("InscripcionCodigo");

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("Sistema.Modelos.Evento", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("lugar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Sistema.Modelos.Inscripcion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("EstadoDeInscripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EventoCodigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ParticipanteCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("EventoCodigo");

                    b.HasIndex("ParticipanteCodigo");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("Sistema.Modelos.Pago", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InscripcionCodigo")
                        .HasColumnType("int");

                    b.Property<string>("MetodoDePago")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Monto")
                        .HasColumnType("double");

                    b.HasKey("Codigo");

                    b.HasIndex("InscripcionCodigo");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Sistema.Modelos.Participante", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("Sistema.Modelos.Ponente", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EventoCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.HasIndex("EventoCodigo");

                    b.ToTable("Ponentes");
                });

            modelBuilder.Entity("Sistema.Modelos.Sala", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codigo");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("Sistema.Modelos.Seccion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("EventoCodigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SalaCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("EventoCodigo");

                    b.HasIndex("SalaCodigo");

                    b.ToTable("Secciones");
                });

            modelBuilder.Entity("Sistema.Modelos.Certificado", b =>
                {
                    b.HasOne("Sistema.Modelos.Inscripcion", "Inscripciones")
                        .WithMany()
                        .HasForeignKey("InscripcionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("Sistema.Modelos.Inscripcion", b =>
                {
                    b.HasOne("Sistema.Modelos.Evento", "Eventos")
                        .WithMany("Inscripciones")
                        .HasForeignKey("EventoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Modelos.Participante", "Participantes")
                        .WithMany("Inscripciones")
                        .HasForeignKey("ParticipanteCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("Sistema.Modelos.Pago", b =>
                {
                    b.HasOne("Sistema.Modelos.Inscripcion", "Inscripciones")
                        .WithMany("Pagos")
                        .HasForeignKey("InscripcionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("Sistema.Modelos.Ponente", b =>
                {
                    b.HasOne("Sistema.Modelos.Evento", "Eventos")
                        .WithMany("Ponentes")
                        .HasForeignKey("EventoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("Sistema.Modelos.Seccion", b =>
                {
                    b.HasOne("Sistema.Modelos.Evento", "Eventos")
                        .WithMany("Secciones")
                        .HasForeignKey("EventoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Modelos.Sala", "Salas")
                        .WithMany()
                        .HasForeignKey("SalaCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Salas");
                });

            modelBuilder.Entity("Sistema.Modelos.Evento", b =>
                {
                    b.Navigation("Inscripciones");

                    b.Navigation("Ponentes");

                    b.Navigation("Secciones");
                });

            modelBuilder.Entity("Sistema.Modelos.Inscripcion", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Sistema.Modelos.Participante", b =>
                {
                    b.Navigation("Inscripciones");
                });
#pragma warning restore 612, 618
        }
    }
}
